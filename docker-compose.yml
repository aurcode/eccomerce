
version: '3.4'

#volumes:
#  inventory-datafiles:
#  logs-datafiles:


services:
#  logs-database:
#    image: mysql:5.7
#    ports:
#      - "3380:3306"
#    volumes:
#      - logs-datafiles:/var/lib/mysql
#    restart: always
#    environment: 
#      MYSQL_ROOT_PASSWORD: RootSuperRoot123
#      MYSQL_USER: dbuser
#      MYSQL_PASSWORD: superpassword123
#      MYSQL_DATABASE: logs

#  inventory-database:
#    image: mysql:5.7
#    ports:
#      - "3366:3306"
#    volumes:
#      - inventory-datafiles:/var/lib/mysql
#    restart: always
#    environment: 
#      MYSQL_ROOT_PASSWORD: RootSuperRoot123
#      MYSQL_USER: dbuser
#      MYSQL_PASSWORD: superpassword123
#      MYSQL_DATABASE: inventory

  inventory.api:
    image: ${DOCKER_REGISTRY-}inventoryapi
    #depends_on:
     #- inventory-database
      #- logs-database
    build:
      context: .
      dockerfile: Inventory.API/Dockerfile
    ports:
      - "5015:80"
      - "758:443"

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    #depends_on:
      #- logs-database
    build:
      context: .
      dockerfile: Ordering.API/Dockerfile
    ports:
      - "5014:80"
      - "757:443"

  users.api:
    image: ${DOCKER_REGISTRY-}inventoryapi
    #depends_on:
      #- logs-database
    build:
      context: .
      dockerfile: Users.API/Dockerfile
    ports:
      - "5013:80"
      - "756:443"
      
  gateway:
    image: ${DOCKER_REGISTRY-}gateway
    depends_on:
      - inventory.api
      - ordering.api
      - users.api
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5012:80"
      - "755:443"